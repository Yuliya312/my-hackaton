{"version":3,"sources":["components/month/Month.js","components/buttonNextPrev/ButtonNextPrev.js","components/NewTask/NewTask.js","components/ListTasks/ListTasks.js","components/ViewButtons/ViewButtons.js","App.js","index.js"],"names":["Month","generateMonth","date","currentDate","nextMonth","Date","getFullYear","getMonth","setDate","startDay","getDay","daysInMonth","getDate","showCurrentTask","tasks","props","showTasks","initialDate","updateInitialDate","updateCurrentDate","test","this","listTasks","currentDay","canlendarBasicInform","blanks","i","push","filled","totalSorst","list","forEach","day","index","trObj","year","month","toDateString","split","className","toLocaleString","map","trItem","key","String","tdItem","type","onClick","event","React","PureComponent","ButtonNextPrev","goNext","toogleOnTodayDay","dayToday","goPrev","Component","NewTask","state","name","value","changeHandler","target","setState","handleSubmit","preventDefault","newTask","addTasksInList","onSubmit","htmlFor","id","placeholder","onChange","rows","cols","ListTasks","addTask","task","v4","prevState","addTasks","item","defaultProps","currentTask","ViewButtons","initialTasks","2020","Jan","1","5","23","Feb","2","Mar","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72c9c82a.chunk.js","sourcesContent":["import React from 'react';\nimport './Month.scss';\nimport PropTypes from 'prop-types';\nimport { v4 } from 'uuid';\n\nexport class Month extends React.PureComponent {\n  generateMonth = (date) => {\n    const currentDate = date;\n    const nextMonth = new Date(date.getFullYear(), date.getMonth() + 1);\n\n    currentDate.setDate(1);\n    const startDay = currentDate.getDay() ? currentDate.getDay() : 7;\n\n    nextMonth.setDate(-0);\n    const daysInMonth = nextMonth.getDate();\n\n    return {\n      currentDate,\n      nextMonth,\n      startDay,\n      daysInMonth,\n    };\n  };\n\n  showCurrentTask = (tasks, date) => {\n    if (tasks) {\n      this.props.showTasks(tasks);\n    } else {\n      this.props.showTasks(null);\n    }\n\n    const currentDate = new Date(this.props.initialDate);\n\n    currentDate.setDate(date);\n    this.props.updateInitialDate(currentDate);\n  };\n\n  updateCurrentDate = (date) => {\n    const currentDate = new Date(this.props.initialDate);\n\n    currentDate.setDate(date);\n    const test = new Date(currentDate);\n\n    this.props.updateInitialDate(test);\n  };\n\n  render() {\n    const { listTasks, initialDate, currentDay } = this.props;\n\n    const canlendarBasicInform = this.generateMonth(initialDate);\n    const blanks = [];\n\n    for (let i = 1; i < canlendarBasicInform.startDay; i += 1) {\n      blanks.push((\n        ''\n      ));\n    }\n\n    const filled = [];\n\n    for (let i = 1; i <= canlendarBasicInform.daysInMonth; i += 1) {\n      filled.push((\n        i\n      ));\n    }\n\n    const totalSorst = [...blanks, ...filled];\n\n    const list = [];\n\n    totalSorst.forEach((day, index) => {\n      if (index % 7 === 0) {\n        const trObj = [];\n\n        for (let i = 0; i < 7; i += 1) {\n          trObj[i] = totalSorst[index + i];\n        }\n\n        list.push(trObj);\n      }\n    });\n\n    const year = initialDate.getFullYear();\n    const month = initialDate.toDateString().split(' ')[1];\n    // console.log(this.props.dayToday)\n\n    return (\n      <div className=\"calendar__month\">\n        <h2 className=\"calendar__title\">{currentDay.toLocaleString()}</h2>\n        <div>\n          <div>\n            <div className=\"calendar__title-week\">\n              <div className=\"calendar__weekday\">ПН</div>\n              <div className=\"calendar__weekday\">ВТ</div>\n              <div className=\"calendar__weekday\">СР</div>\n              <div className=\"calendar__weekday\">ЧТ</div>\n              <div className=\"calendar__weekday\">ПТ</div>\n              <div className=\"calendar__weekday\">СБ</div>\n              <div className=\"calendar__weekday\">НД</div>\n            </div>\n          </div>\n\n          <div>\n            {\n              list.map((trItem, index) => {\n                return (\n                  <div className=\"calendar__week\" key={String(index)}>\n                    {\n                      trItem.map((tdItem, i) => {\n                        return (\n                          <button\n                            key={String(i)}\n                            className=\"calendar__day\"\n                            type=\"button\"\n                            onClick={\n                              (event) => {\n                                if (listTasks[year] && listTasks[year][month]) {\n                                  this.showCurrentTask(\n                                    listTasks[year][month][tdItem],\n                                    tdItem,\n                                  );\n                                } else {\n                                  this.updateCurrentDate(tdItem);\n                                }\n                              }\n                            }\n                          >\n                            {tdItem}\n                          </button>\n                        );\n                      })\n                    }\n                  </div>\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMonth.propTypes = {\n  listTasks: PropTypes.shape({}).isRequired,\n  initialDate: PropTypes.shape({\n    getFullYear: PropTypes.func,\n    toDateString: PropTypes.func,\n  }).isRequired,\n  showTasks: PropTypes.func.isRequired,\n  updateInitialDate: PropTypes.func.isRequired,\n  currentDay: PropTypes.shape().isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ButtonNextPrev extends React.Component {\n  goNext = () => {\n    const { initialDate, updateCurrentDate } = this.props;\n    const newDate = new Date(\n      initialDate.getFullYear(),\n      initialDate.getMonth() + 1,\n    );\n    const toogleOnTodayDay = newDate;\n\n    toogleOnTodayDay.setDate(this.props.dayToday);\n\n    updateCurrentDate(toogleOnTodayDay);\n    this.props.updateInitialDate(toogleOnTodayDay);\n  };\n\n  goPrev= () => {\n    const { initialDate, updateCurrentDate } = this.props;\n    const newDate = new Date(\n      initialDate.getFullYear(),\n      initialDate.getMonth() - 1,\n    );\n    const toogleOnTodayDay = newDate;\n\n    toogleOnTodayDay.setDate(this.props.dayToday);\n    updateCurrentDate(toogleOnTodayDay);\n    this.props.updateInitialDate(toogleOnTodayDay);\n\n  };\n\n  render() {\n    return (\n      <div className=\"navigation__next-prev\">\n        <button\n          className=\"navigation__btn\"\n          type=\"button\"\n          onClick={this.goPrev}\n        >\n          Prev\n        </button>\n        <button\n          className=\"navigation__btn\"\n          type=\"button\"\n          onClick={this.goNext}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nButtonNextPrev.propTypes = {\n  updateCurrentDate: PropTypes.func.isRequired,\n  initialDate: PropTypes.shape({\n    getFullYear: PropTypes.func,\n    getMonth: PropTypes.func,\n  }).isRequired,\n  dayToday: PropTypes.number.isRequired,\n  updateInitialDate: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewTask.scss';\n\nexport class NewTask extends Component {\n  state = {\n    name: '',\n    value: '',\n  };\n\n  changeHandler = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      this.setState({\n        name: value,\n      });\n    } else if (name === 'description') {\n      this.setState({\n        value,\n      });\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const year = this.props.currentDay.getFullYear();\n    const month = this.props.currentDay.toDateString().split(' ')[1];\n    const day = this.props.currentDay.getDate();\n\n    // console.log(this.props.listTasks[year][month]);\n\n    let newTask = this.props.listTasks[year]\n      && this.props.listTasks[year][month]\n      && this.props.listTasks[year][month][day];\n\n    if (newTask) {\n      newTask.push({\n        name: this.state.name,\n        value: this.state.value,\n      });\n    } else {\n      newTask = [];\n      newTask.push({\n        name: this.state.name,\n        value: this.state.value,\n      });\n    }\n\n    this.props.addTasksInList(year, month, day, newTask);\n\n    this.setState({\n      name: '',\n      value: '',\n    });\n  };\n\n  render() {\n    return (\n      <form\n        name=\"addTask\"\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor=\"taskTitle\" className=\"form__title-label\">\n          New task name:\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"taskTitle\"\n            className=\"form__input\"\n            placeholder=\"Add new task name\"\n            onChange={this.changeHandler}\n            value={this.state.name}\n          />\n        </label>\n        <label htmlFor=\"taskDescription\" className=\"form__title-label\">\n          Task description:\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            id=\"taskDescription\"\n            className=\"form__input\"\n            placeholder=\"Add new task description\"\n            rows=\"5\"\n            cols=\"30\"\n            onChange={this.changeHandler}\n            value={this.state.value}\n          />\n        </label>\n        <button type=\"submit\" className=\"form__btn\">Add task</button>\n      </form>\n    );\n  }\n}\n\nNewTask.propTypes = {\n  currentDay: PropTypes.shape().isRequired,\n  addTasksInList: PropTypes.func.isRequired,\n  listTasks: PropTypes.shape().isRequired,\n  // addTask: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 } from 'uuid';\nimport { NewTask } from '../NewTask/NewTask';\n\nimport './ListTasks.scss';\n\nexport class ListTasks extends React.Component {\n  state = {\n    listTasks: this.props.listTasks,\n  };\n\n  addTask = (task) => {\n    const newTask = {\n      ...task,\n      id: v4(),\n    };\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, newTask],\n    }));\n  };\n\n  render() {\n    const { listTasks } = this.props;\n    const year = this.props.currentDay.getFullYear();\n    const month = this.props.currentDay.toDateString().split(' ')[1];\n    const day = this.props.currentDay.getDate();\n\n    return (\n      <>\n        <NewTask\n          listTasks={this.state.listTasks}\n          addTasks={this.addTask}\n          initialDate={this.props.initialDate}\n          currentDay={this.props.currentDay}\n          addTasksInList={this.props.addTasksInList}\n        />\n        <div className=\"tasks-list\">\n          {\n            listTasks[year]\n            && listTasks[year][month]\n            && listTasks[year][month][day]\n              ? listTasks[year][month][day].map(item => (\n                <div className=\"tasks-list__task task\" key={item.id}>\n                  <h3 className=\"task__title\">{item.name}</h3>\n                  <p className=\"task__text\">{item.value}</p>\n                </div>\n              ))\n              : null\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nListTasks.defaultProps = {\n  currentTask: null,\n};\n\nListTasks.propTypes = {\n  currentTask: PropTypes.arrayOf(PropTypes.shape()),\n  currentDay: PropTypes.shape().isRequired,\n  initialDate: PropTypes.shape().isRequired,\n  listTasks: PropTypes.shape({}).isRequired,\n  addTasksInList: PropTypes.func.isRequired,\n};\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nexport class ViewButtons extends React.Component {\n  // goNext = () => {\n  //   const { initialDate, updateCurrentDate } = this.props;\n  //   const newDate = new Date(\n  //     initialDate.getFullYear(),\n  //     initialDate.getMonth() + 1,\n  //   );\n\n  //   updateCurrentDate(newDate);\n  // };\n\n  // goPrev= () => {\n  //   const { initialDate, updateCurrentDate } = this.props;\n  //   const newDate = new Date(\n  //     initialDate.getFullYear(),\n  //     initialDate.getMonth() - 1,\n  //   );\n\n  // updateCurrentDate(newDate);\n  // };\n\n  render() {\n    return (\n      <div className=\"navigation__view-buttons\">\n        <button\n          className=\"navigation__view-btn\"\n          type=\"button\"\n          onClick={this.goPrev}\n        >\n          Year\n        </button>\n        <button\n          className=\"navigation__view-btn\"\n          type=\"button\"\n          onClick={this.goNext}\n        >\n          Month\n        </button>\n        <button\n          className=\"navigation__view-btn\"\n          type=\"button\"\n          onClick={this.goNext}\n        >\n          Day\n        </button>\n      </div>\n    );\n  }\n}\n\n// ButtonNextPrev.propTypes = {\n//   updateCurrentDate: PropTypes.func.isRequired,\n//   initialDate: PropTypes.shape({\n//     getFullYear: PropTypes.func,\n//     getMonth: PropTypes.func,\n//   }).isRequired,\n// };\n","import React from 'react';\nimport './App.scss';\nimport { Month } from './components/month/Month';\nimport { ButtonNextPrev } from './components/buttonNextPrev/ButtonNextPrev';\nimport { ListTasks } from './components/ListTasks/ListTasks';\nimport { ViewButtons } from './components/ViewButtons/ViewButtons';\n\nconst initialTasks = {\n  2020: {\n\n    Jan: {\n      1: [\n        {\n          id: '202011',\n          name: 'list of goods',\n          value: 'potato, milk, bread',\n        },\n      ],\n      5: [\n        {\n          id: '202015',\n          name: 'call to mothter',\n          value: 'she find new job',\n        },\n      ],\n      23: [\n        {\n          id: '2020123',\n          name: 'Test',\n          value: 'try to work',\n        },\n      ],\n    },\n\n    Feb: {\n      1: [\n        {\n          id: '202021',\n          name: 'watch the Witcher',\n          value: 'I must watch this shit',\n        },\n        {\n          id: '2020212',\n          name: 'watch Friends',\n          value: 'the greatest comedy',\n        },\n      ],\n      2: [\n        {\n          id: '202022',\n          name: 'kill Malroy',\n          value: 'some on mush die',\n        },\n      ],\n      23: [\n        {\n          id: '2020223',\n          name: 'Test-feb',\n          value: 'try to work-feb',\n        },\n      ],\n    },\n    Mar: {\n      1: [\n        {\n          id: '202031',\n          name: 'watch the Witcher',\n          value: 'I must watch this shit',\n        },\n        {\n          id: '202021/2',\n          name: 'watch Friends',\n          value: 'the greatest comedy',\n        },\n      ],\n      2: [\n        {\n          id: '202022',\n          name: 'kill Malroy',\n          value: 'some on mush die',\n        },\n      ],\n      23: [\n        {\n          id: '2020223',\n          name: 'Test-feb',\n          value: 'try to work-feb',\n        },\n      ],\n    },\n\n  },\n};\n\nexport class App extends React.Component {\n  state = {\n    listTasks: initialTasks,\n    initialDate: new Date(),\n    currentDay: new Date(),\n    dayToday: () => {\n      const today = new Date();\n\n      return today.getDate();\n    },\n    currentTask: null,\n  };\n\n  updateCurrentDate = (value) => {\n    this.setState({\n      initialDate: value,\n    });\n  };\n\n  showTasks = (value) => {\n    this.setState({\n      currentTask: value,\n    });\n  };\n\n  updateInitialDate = (value) => {\n    this.setState({\n      currentDay: value,\n    });\n  };\n\n  addTasksInList = (year, month, day, value) => {\n    // console.log(year, month, day, value);\n    this.setState(prevState => ({\n      listTasks: {\n        ...prevState.listTasks,\n        [year]: {\n          ...prevState.listTasks[year],\n          [month]: {\n            ...prevState.listTasks[year][month],\n            [day]: value,\n          },\n        },\n      },\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"app\">\n          <h1>Mate Hackaton</h1>\n          <div className=\"calendar\">\n            <div className=\"calendar__main\">\n              <div className=\"calendar__navigation navigation\">\n                <ButtonNextPrev\n                  initialDate={this.state.initialDate}\n                  updateCurrentDate={this.updateCurrentDate}\n                  updateInitialDate={this.updateInitialDate}\n                  showTasks={this.showTasks}\n                  dayToday={this.state.dayToday()}\n\n                />\n                <ViewButtons />\n              </div>\n              <Month\n                listTasks={this.state.listTasks}\n                updateInitialDate={this.updateInitialDate}\n                updateCurrentDate={this.updateCurrentDate}\n                initialDate={this.state.initialDate}\n                showTasks={this.showTasks}\n                currentDay={this.state.currentDay}\n                dayToday={this.state.dayToday()}\n              />\n            </div>\n            <div className=\"calendar__add-task-form\">\n              <ListTasks\n                listTasks={this.state.listTasks}\n                initialDate={this.state.initialDate}\n                currentDay={this.state.currentDay}\n                addTasksInList={this.addTasksInList}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}