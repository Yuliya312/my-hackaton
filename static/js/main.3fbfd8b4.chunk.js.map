{"version":3,"sources":["components/month/Month.js","components/buttonNextPrev/ButtonNextPrev.js","components/NewTask/NewTask.js","components/ListTasks/ListTasks.js","components/ViewButtons/ViewButtons.js","App.js","index.js"],"names":["Month","generateMonth","date","currentDate","nextMonth","Date","getFullYear","getMonth","startDay","getDay","setDate","daysInMonth","getDate","showCurrentTask","tasks","props","showTasks","initialDate","updateInitialDate","this","listTasks","currentDay","canlendarBasicInform","blanks","i","push","filled","totalSorst","list","forEach","day","index","trObj","year","month","toDateString","split","className","toLocaleString","map","trItem","tdItem","type","onClick","event","React","PureComponent","ButtonNextPrev","goNext","updateCurrentDate","goPrev","Component","NewTask","state","name","value","changeHandler","target","setState","handleSubmit","preventDefault","newTask","addTasksInList","onSubmit","htmlFor","id","placeholder","onChange","rows","cols","ListTasks","addTask","task","prevState","addTasks","item","defaultProps","currentTask","ViewButtons","initialTasks","2020","Jan","1","5","Feb","2","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fbfd8b4.chunk.js","sourcesContent":["import React from 'react';\nimport './Month.scss';\nimport PropTypes from 'prop-types';\n\nexport class Month extends React.PureComponent {\n  generateMonth = (date) => {\n    const currentDate = date;\n    const nextMonth = new Date(date.getFullYear(), date.getMonth() + 1);\n    const startDay = currentDate.getDay() ? currentDate.getDay() : 7; // ?\n\n    nextMonth.setDate(-0);\n    const daysInMonth = nextMonth.getDate();\n\n    return {\n      currentDate,\n      nextMonth,\n      startDay,\n      daysInMonth,\n    };\n  };\n\n  showCurrentTask = (tasks, date) => {\n    if (tasks) {\n      this.props.showTasks(tasks);\n      // console.log(value[0].name);\n    } else {\n      this.props.showTasks(null);\n    }\n    // this.props.updateInitialDate(currentDate)\n\n    const currentDate = new Date(this.props.initialDate);\n\n    currentDate.setDate(date);\n    this.props.updateInitialDate(currentDate);\n    // console.log(currentDate)\n  };\n\n  render() {\n    const { listTasks, initialDate, currentDay } = this.props;\n\n    const canlendarBasicInform = this.generateMonth(initialDate);\n    const blanks = [];\n\n    for (let i = 1; i < canlendarBasicInform.startDay; i += 1) {\n      blanks.push((\n        ''\n      ));\n    }\n\n    const filled = [];\n\n    for (let i = 1; i <= canlendarBasicInform.daysInMonth; i += 1) {\n      filled.push((\n        i\n      ));\n    }\n\n    const totalSorst = [...blanks, ...filled];\n\n    const list = [];\n\n    totalSorst.forEach((day, index) => {\n      if (index % 7 === 0) {\n        const trObj = [];\n\n        for (let i = 0; i < 7; i += 1) {\n          trObj[i] = totalSorst[index + i];\n        }\n\n        list.push(trObj);\n      }\n    });\n\n    const year = initialDate.getFullYear();\n    const month = initialDate.toDateString().split(' ')[1];\n\n    return (\n      <div>\n        <h2 className=\"calendar__title\">{currentDay.toLocaleString()}</h2>\n        <div>\n          <div>\n            <div className=\"WeekdayContainer\">\n              <div className=\"Weekday\">ПН</div>\n              <div className=\"Weekday\">ВТ</div>\n              <div className=\"Weekday\">СР</div>\n              <div className=\"Weekday\">ЧТ</div>\n              <div className=\"Weekday\">ПТ</div>\n              <div className=\"Weekday\">СБ</div>\n              <div className=\"Weekday\">НД</div>\n            </div>\n          </div>\n\n          <div>\n            {\n              list.map((trItem, index) => {\n                return (\n                  <div className=\"week\">\n                    {\n                      trItem.map((tdItem) => {\n                        return (\n                          <button // Replace on td\n                            className=\"day\"\n                            type=\"button\"\n                            onClick={\n                              (event) => {\n                                if (listTasks[year] && listTasks[year][month]) {\n                                  this.showCurrentTask(\n                                    listTasks[year][month][tdItem],\n                                    tdItem,\n                                  );\n                                }\n                              }\n                            }\n                          >\n                            {tdItem}\n                          </button>\n                        );\n                      })\n                    }\n                  </div>\n                );\n              })\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMonth.propTypes = {\n  listTasks: PropTypes.shape({}).isRequired,\n  initialDate: PropTypes.shape({\n    getFullYear: PropTypes.func,\n    toDateString: PropTypes.func,\n  }).isRequired,\n  showTasks: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ButtonNextPrev extends React.Component {\n  goNext = () => {\n    const { initialDate, updateCurrentDate } = this.props;\n    const newDate = new Date(\n      initialDate.getFullYear(),\n      initialDate.getMonth() + 1,\n    );\n\n    updateCurrentDate(newDate);\n  };\n\n  goPrev= () => {\n    const { initialDate, updateCurrentDate } = this.props;\n    const newDate = new Date(\n      initialDate.getFullYear(),\n      initialDate.getMonth() - 1,\n    );\n\n    updateCurrentDate(newDate);\n  };\n\n  render() {\n    return (\n      <div className=\"navigation__next-prev\">\n        <button\n          className=\"navigation__btn\"\n          type=\"button\"\n          onClick={this.goPrev}\n        >\n          Prev\n        </button>\n        <button\n          className=\"navigation__btn\"\n          type=\"button\"\n          onClick={this.goNext}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nButtonNextPrev.propTypes = {\n  updateCurrentDate: PropTypes.func.isRequired,\n  initialDate: PropTypes.shape({\n    getFullYear: PropTypes.func,\n    getMonth: PropTypes.func,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewTask.scss';\n\nexport class NewTask extends Component {\n  state = {\n    name: '',\n    value: '',\n  };\n\n  changeHandler = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      this.setState({\n        name: value,\n      });\n    } else if (name === 'description') {\n      this.setState({\n        value: value,\n      });\n    }\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const year = this.props.currentDay.getFullYear();\n    const month = this.props.currentDay.toDateString().split(' ')[1];\n    const day = this.props.currentDay.getDate();\n\n    let newTask = this.props.listTasks[year][month][day];\n\n    if (newTask) {\n      newTask.push({\n        name: this.state.name,\n        value: this.state.value,\n      });\n    } else {\n      newTask = [];\n      newTask.push({\n        name: this.state.name,\n        value: this.state.value,\n      });\n    }\n\n    this.props.addTasksInList(year, month, day, newTask);\n\n    this.setState({\n      name: '',\n      value: '',\n    });\n  };\n\n  render() {\n    return (\n      <form\n        name=\"addTask\"\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <label htmlFor=\"taskTitle\" className=\"input\">\n          Title:\n          <input\n            type=\"text\"\n            name=\"title\"\n            id=\"taskTitle\"\n            className=\"form__input\"\n            placeholder=\"task title\"\n            onChange={this.changeHandler}\n            value={this.state.name}\n          />\n        </label>\n        <label htmlFor=\"taskDescription\">\n          Description:\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            id=\"taskDescription\"\n            className=\"form__input\"\n            placeholder=\"task description\"\n            rows=\"5\"\n            cols=\"30\"\n            onChange={this.changeHandler}\n            value={this.state.value}\n          />\n        </label>\n        <button type=\"submit\" className=\"form__btn\">Add task</button>\n      </form>\n    );\n  }\n}\n\nNewTask.propTypes = {\n  // tasks: PropTypes.arrayOf(\n  //   PropTypes.shape({\n  //     title: PropTypes.string.isRequired,\n  //   }).isRequired,\n  // ).isRequired,\n  addTask: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NewTask } from '../NewTask/NewTask';\n\nexport class ListTasks extends React.Component {\n  state = {\n    listTasks: this.props.listTasks,\n  };\n\n  addTask = (task) => {\n    // console.log(task);\n\n    const newTask = {\n      ...task,\n    };\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, newTask],\n    }));\n  };\n  // console.log(state);\n\n  render() {\n    const { listTasks } = this.props;\n    const year = this.props.currentDay.getFullYear();\n    const month = this.props.currentDay.toDateString().split(' ')[1];\n    const day = this.props.currentDay.getDate();\n\n    return (\n      <>\n        <NewTask\n          listTasks={this.state.listTasks}\n          addTasks={this.addTask}\n          initialDate={this.props.initialDate}\n          currentDay={this.props.currentDay}\n          addTasksInList={this.props.addTasksInList}\n        />\n        <div className=\"tasks-list\">\n          {\n            listTasks[year][month][day]\n              ? listTasks[year][month][day].map(item => (\n                <div>\n                  <h3>{item.name}</h3>\n                  <p>{item.value}</p>\n                </div>\n              ))\n              : null\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nListTasks.defaultProps = {\n  currentTask: null,\n};\n\nListTasks.propTypes = {\n  currentTask: PropTypes.arrayOf(PropTypes.shape()),\n  listTasks: PropTypes.shape({}).isRequired,\n};\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nexport class ViewButtons extends React.Component {\n  // goNext = () => {\n  //   const { initialDate, updateCurrentDate } = this.props;\n  //   const newDate = new Date(\n  //     initialDate.getFullYear(),\n  //     initialDate.getMonth() + 1,\n  //   );\n\n  //   updateCurrentDate(newDate);\n  // };\n\n  // goPrev= () => {\n  //   const { initialDate, updateCurrentDate } = this.props;\n  //   const newDate = new Date(\n  //     initialDate.getFullYear(),\n  //     initialDate.getMonth() - 1,\n  //   );\n\n  // updateCurrentDate(newDate);\n  // };\n\n  render() {\n    return (\n      <div className=\"navigation__view-buttons\">\n        <button\n          className=\"navigation__view-btn\"\n          type=\"button\"\n          onClick={this.goPrev}\n        >\n          Year\n        </button>\n        <button\n          className=\"navigation__view-btn\"\n          type=\"button\"\n          onClick={this.goNext}\n        >\n          Month\n        </button>\n        <button\n          className=\"navigation__view-btn\"\n          type=\"button\"\n          onClick={this.goNext}\n        >\n          Day\n        </button>\n      </div>\n    );\n  }\n}\n\n// ButtonNextPrev.propTypes = {\n//   updateCurrentDate: PropTypes.func.isRequired,\n//   initialDate: PropTypes.shape({\n//     getFullYear: PropTypes.func,\n//     getMonth: PropTypes.func,\n//   }).isRequired,\n// };\n","import React from 'react';\nimport './App.scss';\nimport { Month } from './components/month/Month';\nimport { ButtonNextPrev } from './components/buttonNextPrev/ButtonNextPrev';\nimport { ListTasks } from './components/ListTasks/ListTasks';\nimport { ViewButtons } from './components/ViewButtons/ViewButtons';\n\nconst initialTasks = {\n  2020: {\n\n    Jan: {\n      1: [\n        {\n          name: 'list of goods',\n          value: 'potato, milk, bread',\n        },\n      ],\n      5: [\n        {\n          name: 'call to mothter',\n          value: 'she find new job',\n        },\n      ],\n    },\n\n    Feb: {\n      1: [\n        {\n          name: 'watch the Witcher',\n          value: 'I must watch this shit',\n        },\n        {\n          name: 'watch Friends',\n          value: 'the greatest comedy',\n        },\n      ],\n      2: [\n        {\n          name: 'kill Malroy',\n          value: 'some on mush die',\n        },\n      ],\n    },\n\n  },\n};\n\nexport class App extends React.Component {\n  state = {\n    listTasks: initialTasks,\n    initialDate: new Date(),\n    currentDay: new Date(),\n    currentTask: null,\n  };\n\n  updateCurrentDate = (value) => {\n    this.setState({\n      initialDate: value,\n    });\n  };\n\n  showTasks = (value) => {\n    this.setState({\n      currentTask: value,\n    });\n  };\n\n  updateInitialDate = (value) => {\n    this.setState({\n      currentDay: value,\n    })\n  };\n\n  addTasksInList = (year, month, day, value) => {\n    // console.log(year, month, day, value);\n    this.setState(prevState => ({\n      listTasks: {\n        ...prevState.listTasks,\n        [year]: {\n          ...prevState.listTasks[year],\n          [month]: {\n            ...prevState.listTasks[year][month],\n            [day]: value,\n          }\n        }\n      }\n    }))\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"app\">\n          <h1>Mate Hackaton</h1>\n          <div className=\"calendar\">\n            <div className=\"calendar__main\">\n              <div className=\"navigation\">\n                <ButtonNextPrev\n                  initialDate={this.state.initialDate}\n                  updateCurrentDate={this.updateCurrentDate}\n                  showTasks={this.showTasks}\n                />\n                <ViewButtons />\n              </div>\n              <Month\n                listTasks={this.state.listTasks}\n                updateInitialDate={this.updateInitialDate}\n                initialDate={this.state.initialDate}\n                showTasks={this.showTasks}\n                currentDay={this.state.currentDay}\n              />\n            </div>\n            <div className=\"calendar__task-list task-list\">\n              <ListTasks\n                listTasks={this.state.listTasks}\n                // currentTask={this.state.currentTask}\n                initialDate={this.state.initialDate}\n                currentDay={this.state.currentDay}\n                addTasksInList={this.addTasksInList}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}